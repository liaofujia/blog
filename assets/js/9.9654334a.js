(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{524:function(t,s,e){"use strict";e.r(s);var a=e(76),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"perttier配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#perttier配置"}},[t._v("#")]),t._v(" Perttier配置")]),t._v(" "),e("h2",{attrs:{id:"perttier使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#perttier使用"}},[t._v("#")]),t._v(" Perttier使用")]),t._v(" "),e("p",[t._v("prettier作为开发依赖记录在package.json里，跟着项目走，版本统一，既可以使用官方的默认配置，也可以指定一套内容的配置项。适合团队协作。")]),t._v(" "),e("h2",{attrs:{id:"安装依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖"}},[t._v("#")]),t._v(" 安装依赖")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i prettier -D\n")])])]),e("h2",{attrs:{id:"运行命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行命令"}},[t._v("#")]),t._v(" 运行命令")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("npx prettier --write ./src/App.tsx\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("我们也可以不指定具体文件名，直接运行"),e("code",[t._v("npx prettier --write .")]),t._v(" ,表示当前目录下的所有文件都会被格式化。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[e("code",[t._v("prettier")]),t._v("默认不会处理"),e("code",[t._v("node_modules")]),t._v("里的文件，如果我们想忽略其他的文件或目录，可以在项目根目录下新建.prettierignore文件，表示忽略某些文件或文件夹，具体格式跟.gitignore类似.")])]),t._v(" "),e("h2",{attrs:{id:"prettier配置项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prettier配置项"}},[t._v("#")]),t._v(" Prettier配置项")]),t._v(" "),e("p",[t._v("首先在项目根目录新建一个"),e("code",[t._v(".prettierrc.js")]),t._v("的文件，结构如下：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("trailingComma")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es5"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tabWidth")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("semi")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("singleQuote")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("strong",[t._v("主要有以下项")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("printWidth. 条件允许时每行字符长度大于该值时进行换行（prettier不会强行换行：比如将一个引号包裹的字符串折行）。默认为80")]),t._v(" "),e("li",[t._v("tabWidth. 缩进空格数；默认为2")]),t._v(" "),e("li",[t._v("semi. 语句末尾是否带分号")]),t._v(" "),e("li",[t._v("singleQuote. 是否将双引号转换为单引号。双引号里包含单引号时不会被格式化。")]),t._v(" "),e("li",[t._v("quoteProps. 对象属性引号的配置")]),t._v(" "),e("li",[t._v("jsxSingleQuote. jsx文件里使用单引号")]),t._v(" "),e("li",[t._v("bracketSpacing. 圆括号之间添加空格，如{ a: b }")]),t._v(" "),e("li",[t._v("arrowParens. 箭头函数，参数添加圆括号，如(x)=>y")]),t._v(" "),e("li",[t._v("parser. 指定解析器，我们一般不需要默认的就行")]),t._v(" "),e("li",[t._v("等等\n更详细的介绍可查看文档"),e("a",{attrs:{href:"https://prettier.io/docs/en/options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Perttier"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"git集成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git集成"}},[t._v("#")]),t._v(" Git集成")]),t._v(" "),e("p",[t._v("目前，我们已经配置好了prettier的项，接下来就剩运行格式化的时机了，什么运行最好呢？"),e("em",[t._v("当然是代码提交的时候")]),t._v("。")]),t._v(" "),e("p",[t._v("我们需要在开发提交代码时，运行prettier格式化"),e("code",[t._v("staged")]),t._v("的代码，之后再提交，这就需要用到Git Hooks了，不过已经有工具帮我们集成了，我们只需安装并简单配置以下即可。 这里介绍两种：")]),t._v(" "),e("p",[e("strong",[t._v("pre-commit")])]),t._v(" "),e("ul",[e("li",[t._v("安装依赖： "),e("code",[t._v("npm i pre-commit -D")])]),t._v(" "),e("li",[t._v("配置脚本：")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//package.json")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prettier"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx prettier --write ."')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("完成安装和配置后，当开发者完成代码，执行"),e("code",[t._v("git add文件名或路径后")]),t._v("（即"),e("code",[t._v("stage")]),t._v("改变）的时候，会自动运行配置的"),e("code",[t._v("prettier")]),t._v("脚本，执行格式化，开发再将格式化后的新改变添加最后提交即可。")]),t._v(" "),e("p",[e("strong",[t._v("lint-staged")])]),t._v(" "),e("p",[t._v("详细介绍请看下一遍ESlint配置的lint-staged!!!")])])}),[],!1,null,null,null);s.default=r.exports}}]);